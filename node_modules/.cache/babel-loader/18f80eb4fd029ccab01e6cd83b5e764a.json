{"ast":null,"code":"import _regeneratorRuntime from\"/Users/kitianlao/Desktop/Projects/FullStack/covid_tracker/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\";import _asyncToGenerator from\"/Users/kitianlao/Desktop/Projects/FullStack/covid_tracker/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";import _slicedToArray from\"/Users/kitianlao/Desktop/Projects/FullStack/covid_tracker/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import React,{useState,useEffect}from'react';import{NativeSelect,FormControl}from'@material-ui/core';import{fetchCountries}from'../../api';import styles from'./CountrySelector.module.css';var Countries=function Countries(_ref){var handleCountryChange=_ref.handleCountryChange;var _useState=useState([]),_useState2=_slicedToArray(_useState,2),countries=_useState2[0],setCountries=_useState2[1];// Want to fetch the entire dataset for all the countries\n// once during mount. These are the global statistics.\nuseEffect(function(){var fetchAPI=/*#__PURE__*/function(){var _ref2=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee(){return _regeneratorRuntime.wrap(function _callee$(_context){while(1){switch(_context.prev=_context.next){case 0:_context.t0=setCountries;_context.next=3;return fetchCountries();case 3:_context.t1=_context.sent;(0,_context.t0)(_context.t1);case 5:case\"end\":return _context.stop();}}},_callee);}));return function fetchAPI(){return _ref2.apply(this,arguments);};}();fetchAPI();},[]);return/*#__PURE__*/React.createElement(FormControl,{className:styles.formControl},/*#__PURE__*/React.createElement(NativeSelect,{defaultValue:\"\",onChange:function onChange(e){return handleCountryChange(e.target.value);}},/*#__PURE__*/React.createElement(\"option\",{value:\"\"},\"Global\"),countries.map(function(country,i){return/*#__PURE__*/React.createElement(\"option\",{key:i,value:country},country);})));};export default Countries;","map":{"version":3,"sources":["/Users/kitianlao/Desktop/Projects/FullStack/covid_tracker/src/components/CountrySelector/CountrySelector.js"],"names":["React","useState","useEffect","NativeSelect","FormControl","fetchCountries","styles","Countries","handleCountryChange","countries","setCountries","fetchAPI","formControl","e","target","value","map","country","i"],"mappings":"6gBAAA,MAAOA,CAAAA,KAAP,EAAgBC,QAAhB,CAA0BC,SAA1B,KAA2C,OAA3C,CACA,OAASC,YAAT,CAAuBC,WAAvB,KAA0C,mBAA1C,CAEA,OAASC,cAAT,KAA+B,WAA/B,CAEA,MAAOC,CAAAA,MAAP,KAAmB,8BAAnB,CAEA,GAAMC,CAAAA,SAAS,CAAG,QAAZA,CAAAA,SAAY,MAA6B,IAA1BC,CAAAA,mBAA0B,MAA1BA,mBAA0B,eACXP,QAAQ,CAAC,EAAD,CADG,wCACtCQ,SADsC,eAC3BC,YAD2B,eAG7C;AACA;AACAR,SAAS,CAAC,UAAM,CACd,GAAMS,CAAAA,QAAQ,2FAAG,+IACfD,YADe,uBACIL,CAAAA,cAAc,EADlB,qHAAH,kBAARM,CAAAA,QAAQ,2CAAd,CAGAA,QAAQ,GACT,CALQ,CAKN,EALM,CAAT,CAOA,mBACE,oBAAC,WAAD,EAAa,SAAS,CAAEL,MAAM,CAACM,WAA/B,eACE,oBAAC,YAAD,EAAc,YAAY,CAAC,EAA3B,CAA8B,QAAQ,CAAE,kBAACC,CAAD,QAAOL,CAAAA,mBAAmB,CAACK,CAAC,CAACC,MAAF,CAASC,KAAV,CAA1B,EAAxC,eAEE,8BAAQ,KAAK,CAAC,EAAd,WAFF,CAGGN,SAAS,CAACO,GAAV,CAAc,SAACC,OAAD,CAAUC,CAAV,qBAAgB,8BAAQ,GAAG,CAAEA,CAAb,CAAgB,KAAK,CAAED,OAAvB,EAAiCA,OAAjC,CAAhB,EAAd,CAHH,CADF,CADF,CASD,CArBD,CAuBA,cAAeV,CAAAA,SAAf","sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { NativeSelect, FormControl } from '@material-ui/core';\n\nimport { fetchCountries } from '../../api';\n\nimport styles from './CountrySelector.module.css';\n\nconst Countries = ({ handleCountryChange }) => {\n  const [countries, setCountries] = useState([]);\n\n  // Want to fetch the entire dataset for all the countries\n  // once during mount. These are the global statistics.\n  useEffect(() => {\n    const fetchAPI = async () => {\n      setCountries(await fetchCountries());\n    };\n    fetchAPI();\n  }, []);\n\n  return (\n    <FormControl className={styles.formControl}>\n      <NativeSelect defaultValue=\"\" onChange={(e) => handleCountryChange(e.target.value)}>\n        {/* Initially show the global statistics */}\n        <option value=\"\">Global</option>\n        {countries.map((country, i) => <option key={i} value={country}>{country}</option>)}\n      </NativeSelect>\n    </FormControl>\n  );\n};\n\nexport default Countries;"]},"metadata":{},"sourceType":"module"}